apiVersion: v1
kind: Service
metadata:
  name: {{ include "[[ application.name ]].[[ component.name | to_lower_camel ]].fullname" . }}
  labels:
    {{- include "[[ application.name ]].[[ component.name | to_lower_camel ]].labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.[[ component.name | to_lower_camel ]].service.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.[[ component.name | to_lower_camel ]].service.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.[[ component.name | to_lower_camel ]].service.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  type: {{ .Values.[[ component.name | to_lower_camel ]].service.type }}
  {{- if and (eq .Values.[[ component.name | to_lower_camel ]].service.type "ClusterIP") .Values.[[ component.name | to_lower_camel ]].service.clusterIP }}
  clusterIP: {{ .Values.[[ component.name | to_lower_camel ]].service.clusterIP }}
  {{- end }}
  {{- if and (eq .Values.[[ component.name | to_lower_camel ]].service.type "LoadBalancer") .Values.[[ component.name | to_lower_camel ]].service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.[[ component.name | to_lower_camel ]].service.loadBalancerIP }}
  {{- end }}
  {{- if and (eq .Values.[[ component.name | to_lower_camel ]].service.type "LoadBalancer") .Values.[[ component.name | to_lower_camel ]].service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml .Values.[[ component.name | to_lower_camel ]].service.loadBalancerSourceRanges | nindent 4 }}
  {{- end }}
  {{- if or (eq .Values.[[ component.name | to_lower_camel ]].service.type "LoadBalancer") (eq .Values.[[ component.name | to_lower_camel ]].service.type "NodePort") }}
  externalTrafficPolicy: {{ .Values.[[ component.name | to_lower_camel ]].service.externalTrafficPolicy }}
  {{- end }}
  ports:
    [%- for port in component.service.ports %]
    - port: {{ .Values.[[ component.name | to_lower_camel ]].service.ports.[[ port.name ]] }}
      targetPort: [[ port.name ]]
      protocol: TCP
      name: [[ port.name ]]
      {{- if and (or (eq .Values.[[ component.name | to_lower_camel ]].service.type "LoadBalancer") (eq .Values.[[ component.name | to_lower_camel ]].service.type "NodePort")) .Values.[[ component.name | to_lower_camel ]].service.nodePorts.[[ port.name ]] }}
      nodePort: {{ .Values.[[ component.name | to_lower_camel ]].service.nodePorts.[[ port.name ]] }}
      {{- end }}
    [%- endfor %]
  selector:
    {{- include "[[ application.name ]].[[ component.name | to_lower_camel ]].selectorLabels" . | nindent 4 }}
