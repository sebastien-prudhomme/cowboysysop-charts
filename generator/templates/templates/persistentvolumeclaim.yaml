[% if component.name == application.name %]
[% set component_values_path = "." %]
[% else %]
[% set component_values_path = component.name | to_lower_camel %]
[% set component_values_path = "." + component_values_path + "." %]
[% endif %]
[% if component.optional %]
{{- if .Values[[ component_values_path ]]enabled }}
[% endif %]
{{- if and .Values[[ component_values_path ]]persistence.enabled (not .Values[[ component_values_path ]]persistence.existingClaim) }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "[[ application.name ]][[ component_values_path ]]fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "[[ application.name ]][[ component_values_path ]]labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values[[ component_values_path ]]persistence.annotations .Values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values[[ component_values_path ]]persistence.annotations .Values.commonAnnotations ) "context" . ) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  accessModes:
    - {{ .Values[[ component_values_path ]]persistence.accessMode | quote }}
  resources:
    requests:
      storage: {{ .Values[[ component_values_path ]]persistence.size | quote }}
  {{- if .Values[[ component_values_path ]]persistence.storageClass }}
  {{- if (eq "-" .Values[[ component_values_path ]]persistence.storageClass) }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ .Values[[ component_values_path ]]persistence.storageClass | quote }}
  {{- end }}
  {{- end }}
{{- end }}
[% if component.optional %]
{{- end -}}
[% endif %]
