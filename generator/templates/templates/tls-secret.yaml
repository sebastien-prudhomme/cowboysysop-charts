[% if component.name == application.name %]
[% set component_values_path = "." %]
[% else %]
[% set component_values_path = component.name | to_lower_camel %]
[% set component_values_path = "." + component_values_path + "." %]
[% endif %]
[% if component.optional %]
{{- if .Values[[ component_values_path ]]enabled }}
[% endif %]
{{- if not .Values[[ component_values_path ]]tls.existingSecret }}
{{- $ca := genCA (include "[[ application.name ]][[ component_values_path ]]fullname" .) 365 }}
[% if component.service.nameOverride %]
{{- $cn := printf "%s.%s.svc" "[[ component.service.nameOverride ]]" (include "common.names.namespace" .) }}
[% else %]
{{- $cn := printf "%s.%s.svc" (include "[[ application.name ]][[ component_values_path ]]fullname" .) (include "common.names.namespace" .) }}
[% endif %]
{{- $cert := genSignedCert $cn nil (list $cn) 365 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "[[ application.name ]][[ component_values_path ]]tls.secretName" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "[[ application.name ]][[ component_values_path ]]labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  ca.crt: {{ default $ca.Cert .Values[[ component_values_path ]]tls.caCert | b64enc | quote }}
  tls.crt: {{ default $cert.Cert .Values[[ component_values_path ]]tls.cert | b64enc | quote }}
  tls.key: {{ default $cert.Key .Values[[ component_values_path ]]tls.key | b64enc | quote }}
{{- end }}
[% if component.optional %]
{{- end }}
[% endif %]
