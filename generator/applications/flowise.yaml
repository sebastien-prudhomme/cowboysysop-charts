name: flowise
productName: Flowise
appVersion: 3.0.3
description: is a <<drag & drop UI to build your customized LLM flow>>
home: https://flowiseai.com/
icon: https://avatars.githubusercontent.com/u/128289781
license: 2023
source: https://github.com/FlowiseAI/Flowise
version: 6.0.0
updates: |
  ### Upgrading to version 6.0.0
  The chart now uses forked versions of the Bitnami charts to reference the Bitnami Legacy repository:

  - https://github.com/bitnami/containers/issues/83267

  A label `app.kubernetes.io/component` will be added to the Deployment. Run this command before upgrading to prevent an immutable field error:

  ```bash
  $ kubectl delete deployment/my-flowise-deployment
  ```

  Also run this command if `worker.enabled` parameter is `true`:

  ```bash
  $ kubectl delete deployment/my-flowise-worker-deployment
  ```

  Pod and container security contexts are now configured with default values.

  ### Upgrading to version 5.0.0

  The application has changed its authentication system, see the release notes:

  - https://github.com/FlowiseAI/Flowise/releases/tag/flowise%403.0.1

  Parameters `config.username` and `config.password` have been removed.

  ### Upgrading to version 4.0.0

  A new parameter `config.encryptionKey` has been added.

  If you're using the default `local` storage type and not the `aws` one, configure it with the
  current value of the encryption key using:

  ```bash
  $ kubectl exec deployment/my-flowise-deployment -c flowise -- cat /data/encryption.key
  ```

  The MariaDB subchart has been updated to a major release, see these upgrade instructions:

  - https://github.com/bitnami/charts/tree/master/bitnami/mariadb#to-2020
  - https://github.com/bitnami/charts/tree/master/bitnami/mariadb#to-2000
  - https://github.com/bitnami/charts/tree/master/bitnami/mariadb#to-1900

  Information about services are no more injected into pod's environment variable.

  ### Upgrading to version 3.0.0

  The MariaDB subchart has been updated to a major release, see these upgrade instructions:

  - https://github.com/bitnami/charts/tree/master/bitnami/mariadb#to-1700
  - https://github.com/bitnami/charts/tree/master/bitnami/mariadb#to-1600
  - https://github.com/bitnami/charts/tree/master/bitnami/mariadb#to-1400
  - https://github.com/bitnami/charts/tree/master/bitnami/mariadb#to-1300

  The PostgreSQL subchart has been updated to a major release, see these upgrade instructions:

  - https://github.com/bitnami/charts/tree/main/bitnami/postgresql#to-1500
  - https://github.com/bitnami/charts/tree/main/bitnami/postgresql#to-1400
  - https://github.com/bitnami/charts/tree/main/bitnami/postgresql#to-1300

  ### Upgrading to version 2.0.0

  The chart is now tested with Kubernetes >= 1.24 and Helm >= 3.9.

  Future upgrades may introduce undetected breaking changes if you continue to use older versions.
readme: |
  ## Queue mode

  To run Flowise in queue mode:

  - Set `config.mode` parameter to `queue`
  - Set `worker.enabled` parameter to `true`
  - Set `mariadb.enabled` parameter or `externalMariadb.enabled` parameter
    or `postgresql.enabled` parameter or `externalPostgresql.enabled` parameter to `true`
  - Set `redis.enabled` parameter or `externalRedis.enabled` parameter to `true`
components:
  - name: flowise
    deployment:
      type: deployment
      waitMariadb: true
      waitPostgresql: true
      waitRedis: true
      container:
        env: |
          - name: MODE
            value: {{ .Values.config.mode | quote }}
          - name: PORT
            value: {{ .Values.containerPorts.http | quote }}
          - name: FLOWISE_SECRETKEY_OVERWRITE
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.secretName" . }}
                key: {{ include "flowise.secretKeyEncryptionKey" . }}
          - name: APIKEY_PATH
            value: /data
          - name: BLOB_STORAGE_PATH
            value: /data/storage
          - name: SECRETKEY_PATH
            value: /data
          - name: DATABASE_PATH
            value: /data
          {{- if or .Values.mariadb.enabled .Values.externalMariadb.enabled }}
          - name: DATABASE_TYPE
            value: mysql
          - name: DATABASE_HOST
            value: {{ include "flowise.mariadb.host" . | quote }}
          - name: DATABASE_PORT
            value: {{ include "flowise.mariadb.port" . | quote }}
          - name: DATABASE_USER
            value: {{ include "flowise.mariadb.username" . | quote }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.mariadb.secretName" . }}
                key: {{ include "flowise.mariadb.secretKeyPassword" . }}
          - name: DATABASE_NAME
            value: {{ include "flowise.mariadb.database" . | quote }}
          {{- end }}
          {{- if or .Values.postgresql.enabled .Values.externalPostgresql.enabled }}
          - name: DATABASE_TYPE
            value: postgres
          - name: DATABASE_HOST
            value: {{ include "flowise.postgresql.host" . | quote }}
          - name: DATABASE_PORT
            value: {{ include "flowise.postgresql.port" . | quote }}
          - name: DATABASE_USER
            value: {{ include "flowise.postgresql.username" . | quote }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.postgresql.secretName" . }}
                key: {{ include "flowise.postgresql.secretKeyPassword" . }}
          - name: DATABASE_NAME
            value: {{ include "flowise.postgresql.database" . | quote }}
          {{- end }}
          {{- if or .Values.redis.enabled .Values.externalRedis.enabled }}
          - name: REDIS_HOST
            value: {{ include "flowise.redis.host" . | quote }}
          - name: REDIS_PORT
            value: {{ include "flowise.redis.port" . | quote }}
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.redis.secretName" . }}
                key: {{ include "flowise.redis.secretKeyPassword" . }}
          {{- end }}
        livenessProbe:
          httpGet:
            path: /api/v1/ping
        readinessProbe:
          httpGet:
            path: /api/v1/ping
        securityContext:
          readOnlyRootFilesystem: false
          runAsUser: 0
          runAsGroup: 0
        startupProbe:
          httpGet:
            path: /api/v1/ping
        volumeMounts: |
          - name: data
            mountPath: /data
    image:
      registry: docker.io
      repository: flowiseai/flowise
      tag: 3.0.3
    ingress:
      paths:
        - /
    persistentvolumeclaim: true
    secret: |
      encryption-key: {{ .Values.config.encryptionKey | b64enc | quote }}
    secretKeyHelpers: |
      {{/*
      Key in Secret that contains encryption key
      */}}
      {{- define "flowise.secretKeyEncryptionKey" -}}
      {{- if .Values.existingSecret -}}
          {{ .Values.existingSecretKeyEncryptionKey }}
      {{- else -}}
          encryption-key
      {{- end -}}
      {{- end -}}
    secretKeyValues: |
      ## @param existingSecretKeyEncryptionKey Key in existing Secret that contains encryption key
      existingSecretKeyEncryptionKey: encryption-key
    service:
      ports:
        - name: http
          number: 3000
          description: HTTP
    extraValues: |
      config:
        ## @param config.mode Mode to run Flowise
        mode: main

        ## @param config.encryptionKey Encryption key
        encryptionKey: ""
  - name: worker
    description: Worker
    optional: true
    enabled: false
    deployment:
      type: deployment
      waitMariadb: true
      waitPostgresql: true
      waitRedis: true
      container:
        env: |
          - name: WORKER_PORT
            value: {{ .Values.worker.containerPorts.probes | quote }}
          - name: FLOWISE_SECRETKEY_OVERWRITE
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.secretName" . }}
                key: {{ include "flowise.secretKeyEncryptionKey" . }}
          {{- if or .Values.mariadb.enabled .Values.externalMariadb.enabled }}
          - name: DATABASE_TYPE
            value: mysql
          - name: DATABASE_HOST
            value: {{ include "flowise.mariadb.host" . | quote }}
          - name: DATABASE_PORT
            value: {{ include "flowise.mariadb.port" . | quote }}
          - name: DATABASE_USER
            value: {{ include "flowise.mariadb.username" . | quote }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.mariadb.secretName" . }}
                key: {{ include "flowise.mariadb.secretKeyPassword" . }}
          - name: DATABASE_NAME
            value: {{ include "flowise.mariadb.database" . | quote }}
          {{- end }}
          {{- if or .Values.postgresql.enabled .Values.externalPostgresql.enabled }}
          - name: DATABASE_TYPE
            value: postgres
          - name: DATABASE_HOST
            value: {{ include "flowise.postgresql.host" . | quote }}
          - name: DATABASE_PORT
            value: {{ include "flowise.postgresql.port" . | quote }}
          - name: DATABASE_USER
            value: {{ include "flowise.postgresql.username" . | quote }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.postgresql.secretName" . }}
                key: {{ include "flowise.postgresql.secretKeyPassword" . }}
          - name: DATABASE_NAME
            value: {{ include "flowise.postgresql.database" . | quote }}
          {{- end }}
          - name: REDIS_HOST
            value: {{ include "flowise.redis.host" . | quote }}
          - name: REDIS_PORT
            value: {{ include "flowise.redis.port" . | quote }}
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.redis.secretName" . }}
                key: {{ include "flowise.redis.secretKeyPassword" . }}
        ports:
          - name: probes
            nameContainer: http-probes
            number: 5566
            description: Probes
        livenessProbe:
          httpGet:
            path: /healthz
            port: http-probes
        readinessProbe:
          httpGet:
            path: /healthz
            port: http-probes
        securityContext:
          readOnlyRootFilesystem: false
          runAsUser: 0
          runAsGroup: 0
        startupProbe:
          httpGet:
            path: /healthz
            port: http-probes
    image:
      registry: docker.io
      repository: flowiseai/flowise-worker
      tag: 3.0.3
mariadb: optional
postgresql: optional
redis: optional
tests: |
  import requests


  def test_service_connection():
      url = "http://{{ include "flowise.fullname" . }}:{{ .Values.service.ports.http }}/"

      response = requests.get(url)

      assert response.status_code == 200
