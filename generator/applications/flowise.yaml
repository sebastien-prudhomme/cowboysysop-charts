name: flowise
productName: Flowise
appVersion: 1.3.1
description: is a <<drag & drop UI to build your customized LLM flow>>
home: https://flowiseai.com/
icon: https://avatars.githubusercontent.com/u/128289781
license: 2023
source: https://github.com/FlowiseAI/Flowise
version: 2.1.0
updates: |
  ### Upgrading to version 2.0.0

  The chart is now tested with Kubernetes >= 1.24 and Helm >= 3.9.

  Future upgrades may introduce undetected breaking changes if you continue to use older versions.
components:
  - name: flowise
    deployment:
      type: deployment
      waitMariadb: true
      waitPostgresql: true
      container:
        command: |
          - /bin/sh
          - -ec
          - |
            flowise start
        env: |
          - name: PORT
            value: {{ .Values.containerPorts.http | quote }}
          {{- if and .Values.config.username .Values.config.password }}
          - name: FLOWISE_USERNAME
            value: {{ .Values.config.username | quote }}
          - name: FLOWISE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.secretName" . }}
                key: {{ include "flowise.secretKeyPassword" . }}
          {{- end }}
          - name: APIKEY_PATH
            value: /data
          - name: SECRETKEY_PATH
            value: /data
          - name: PASSPHRASE
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.secretName" . }}
                key: {{ include "flowise.secretKeyPassphrase" . }}
          - name: EXECUTION_MODE
            value: {{ .Values.config.executionMode | quote }}
          - name: DATABASE_PATH
            value: /data
          {{- if or .Values.mariadb.enabled .Values.externalMariadb.enabled }}
          - name: DATABASE_TYPE
            value: mysql
          - name: DATABASE_HOST
            value: {{ include "flowise.mariadb.host" . | quote }}
          - name: DATABASE_PORT
            value: {{ include "flowise.mariadb.port" . | quote }}
          - name: DATABASE_USER
            value: {{ include "flowise.mariadb.username" . | quote }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.mariadb.secretName" . }}
                key: {{ include "flowise.mariadb.secretKeyPassword" . }}
          - name: DATABASE_NAME
            value: {{ include "flowise.mariadb.database" . | quote }}
          {{- end }}
          {{- if or .Values.postgresql.enabled .Values.externalPostgresql.enabled }}
          - name: DATABASE_TYPE
            value: postgres
          - name: DATABASE_HOST
            value: {{ include "flowise.postgresql.host" . | quote }}
          - name: DATABASE_PORT
            value: {{ include "flowise.postgresql.port" . | quote }}
          - name: DATABASE_USER
            value: {{ include "flowise.postgresql.username" . | quote }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "flowise.postgresql.secretName" . }}
                key: {{ include "flowise.postgresql.secretKeyPassword" . }}
          - name: DATABASE_NAME
            value: {{ include "flowise.postgresql.database" . | quote }}
          {{- end }}
        livenessProbe:
          httpGet:
            path: /
        readinessProbe:
          httpGet:
            path: /
        startupProbe:
          httpGet:
            path: /
        volumeMounts: |
          - name: data
            mountPath: /data
    image:
      registry: docker.io
      repository: flowiseai/flowise
      tag: 1.3.1
    ingress: true
    persistentvolumeclaim: true
    secret: |
      {{- if and .Values.config.username .Values.config.password }}
      password: {{ .Values.config.password | b64enc | quote }}
      {{- end }}
      passphrase: {{ .Values.config.passphrase | b64enc | quote }}
    secretKeyHelpers: |
      {{/*
      Key in Secret that contains password
      */}}
      {{- define "flowise.secretKeyPassword" -}}
      {{- if .Values.existingSecret -}}
          {{ .Values.existingSecretKeyPassword }}
      {{- else -}}
          password
      {{- end -}}
      {{- end -}}

      {{/*
      Key in Secret that contains passphrase
      */}}
      {{- define "flowise.secretKeyPassphrase" -}}
      {{- if .Values.existingSecret -}}
          {{ .Values.existingSecretKeyPassphrase }}
      {{- else -}}
          passphrase
      {{- end -}}
      {{- end -}}
    secretKeyValues: |
      ## @param existingSecretKeyPassword Key in existing Secret that contains password
      existingSecretKeyPassword: password

      ## @param existingSecretKeyPassphrase Key in existing Secret that contains passphrase
      existingSecretKeyPassphrase: passphrase
    service:
      ports:
        - name: http
          number: 3000
          description: HTTP
    extraValues: |

      ## @section Config parameters

      config:
        ## @param config.username Username to login
        username: ""

        ## @param config.password Password to login
        password: ""

        ## @param config.passphrase Passphrase used to create encryption key
        passphrase: MYPASSPHRASE

        ## @param config.executionMode Whether predictions run in their own process or the main process
        executionMode: main
mariadb: optional
postgresql: optional
tests: |
  import requests


  def test_service_connection():
      url = "http://{{ include "flowise.fullname" . }}:{{ .Values.service.ports.http }}/"

      response = requests.get(url)

      assert response.status_code == 200
