name: lighthouse-ci
productName: Lighthouse CI Server
appVersion: 0.8.1
descriptionVerb: is
description: enables running a server to display Lighthouse CI results
home: https://github.com/GoogleChrome/lighthouse-ci
icon: https://raw.githubusercontent.com/GoogleChrome/lighthouse-ci/master/packages/server/src/ui/logo.svg
source: https://github.com/GoogleChrome/lighthouse-ci
version: 6.0.0
prerequisites: |
  - Kubernetes >= 1.19
updates: |
  ### Upgrading to version 6.0.0

  Some parameters related to port management have been modified:

  - Parameter `service.port` has been renamed `service.ports.http`.
  - Parameter `service.nodePort` has been renamed `service.nodePorts.http`.

  ### Upgrading to version 5.0.0

  Some parameters related to image management have been modified:

  - Registry prefix in `image.repository` parameters is now configured in `image.registry`.
  - Parameter `imagePullSecrets` has been renamed `global.imagePullSecrets`.

  ### Upgrading to version 4.0.0

  The PostgreSQL subchart has been updated to a major release, see these upgrade instructions:

  - https://github.com/bitnami/charts/tree/main/bitnami/postgresql#to-1200
  - https://docs.bitnami.com/kubernetes/infrastructure/postgresql/administration/upgrade/#to-1100

  ### Upgrading to version 3.0.0

  The MariaDB subchart has been updated to a major release, see these upgrade instructions:

  - https://github.com/bitnami/charts/tree/master/bitnami/mariadb#to-1100
  - https://github.com/bitnami/charts/tree/master/bitnami/mariadb#to-1000

  ### Upgrading to version 2.0.0

  The chart is no more compatible with Helm 2.

  Refer to the [Helm documentation](https://helm.sh/docs/topics/v2_v3_migration/) for more information.
components:
  - name: lighthouse-ci
    deployment:
      type: deployment
      initContainer:
        command: |
          - /bin/bash
          - -ec
          - |
            rm -f /var/www/documents/install.lock
        volumeMounts: |
          - name: data
            mountPath: /var/www/documents
      container:
        env: |
          - name: DOLI_ADMIN_LOGIN
            value: {{ .Values.lighthouse-ci.admin.username | quote }}
          - name: DOLI_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "lighthouse-ci.secretName" . }}
                key: lighthouse-ci-admin-password
          - name: DOLI_DB_HOST
            value: {{ include "lighthouse-ci.mariadb.host" . | quote }}
          - name: DOLI_DB_HOST_PORT
            value: {{ include "lighthouse-ci.mariadb.port" . | quote }}
          - name: DOLI_DB_USER
            value: {{ include "lighthouse-ci.mariadb.username" . | quote }}
          - name: DOLI_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "lighthouse-ci.mariadb.secretName" . }}
                key: {{ include "lighthouse-ci.mariadb.secretKeyNamePassword" . }}
          - name: DOLI_DB_NAME
            value: {{ include "lighthouse-ci.mariadb.database" . | quote }}
          - name: DOLI_URL_ROOT
            value: {{ .Values.lighthouse-ci.externalUrl | quote }}
        livenessProbe:
          initialDelaySeconds: 180
          httpGet:
            path: /
        readinessProbe:
          httpGet:
            path: /
        volumeMounts: |
          - name: data
            mountPath: /var/www/documents
      containers:
        - name: cron
          optional: true
          env: |
            - name: DOLI_CRON
              value: "1"
            - name: DOLI_CRON_USER
              value: {{ .Values.lighthouse-ci.cron.username | quote }}
            - name: DOLI_CRON_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "lighthouse-ci.secretName" . }}
                  key: lighthouse-ci-cron-security-key
            - name: DOLI_DB_HOST
              value: {{ include "lighthouse-ci.mariadb.host" . | quote }}
            - name: DOLI_DB_HOST_PORT
              value: {{ include "lighthouse-ci.mariadb.port" . | quote }}
            - name: DOLI_DB_USER
              value: {{ include "lighthouse-ci.mariadb.username" . | quote }}
            - name: DOLI_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "lighthouse-ci.mariadb.secretName" . }}
                  key: {{ include "lighthouse-ci.mariadb.secretKeyNamePassword" . }}
            - name: DOLI_DB_NAME
              value: {{ include "lighthouse-ci.mariadb.database" . | quote }}
          volumeMounts: |
            - name: data
              mountPath: /var/www/documents
    image:
      registry: docker.io
      repository: tuxgasy/lighthouse-ci
      tag: 15.0.3
    ingress: true
    persistentvolumeclaim: true
    secret: |
      lighthouse-ci-admin-password: {{ .Values.lighthouse-ci.admin.password | b64enc | quote }}
      {{- if .Values.lighthouse-ci.cron.enabled }}
      lighthouse-ci-cron-security-key: {{ .Values.lighthouse-ci.cron.securityKey | b64enc | quote }}
      {{- end }}
    service:
      ports:
        - name: http
          number: 80
          numberForward: 8080
          description: HTTP
    extraValues: |
      lighthouse-ci:
        admin:
          ## @param lighthouse-ci.admin.username Administrator username
          username: admin

          ## @param lighthouse-ci.admin.password Administrator password
          password: admin

        ## @param lighthouse-ci.externalUrl External URL
        externalUrl: http://lighthouse-ci.local

        cron:
          ## @param lighthouse-ci.cron.enabled Enable cron for scheduled jobs
          enabled: false

          ## @param lighthouse-ci.cron.username Cron username
          username: admin

          ## @param lighthouse-ci.cron.securityKey Cron security key
          securityKey: ""
mariadb: true
postgresql: true
tests: |
  import requests


  def test_service_connection():
      url = "http://{{ include "lighthouse-ci.fullname" . }}:{{ .Values.service.ports.http }}/"

      response = requests.get(url)

      assert response.status_code == 200
