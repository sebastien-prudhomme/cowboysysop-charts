name: whoami
productName: Whoami
appVersion: 1.11.0
description: is a <<tiny Go webserver that prints os information and HTTP request to output>>
home: https://github.com/traefik/whoami
license: 2020
source: https://github.com/traefik/whoami
version: 6.0.0
updates: |
  ### Upgrading to version 6.0.0

  The chart now uses forked versions of the Bitnami charts to reference the Bitnami Legacy repository:

  - https://github.com/bitnami/containers/issues/83267

  A label `app.kubernetes.io/component` will be added to the Deployment. Run this command before upgrading to prevent an immutable field error:

  ```bash
  $ kubectl delete deployment/my-whoami-deployment
  ```

  Pod and container security contexts are now configured with default values.

  Information about services are no more injected into pod's environment variable.

  ### Upgrading to version 5.0.0

  The chart is now tested with Kubernetes >= 1.24 and Helm >= 3.9.

  Future upgrades may introduce undetected breaking changes if you continue to use older versions.

  ### Upgrading to version 4.0.0

  Some parameters related to port management have been modified:

  - Parameter `service.port` has been renamed `service.ports.http`.
  - Parameter `service.nodePort` has been renamed `service.nodePorts.http`.

  ### Upgrading to version 3.0.0

  Some parameters related to image management have been modified:

  - Registry prefix in `image.repository` parameters is now configured in `image.registry`.
  - Parameter `imagePullSecrets` has been renamed `global.imagePullSecrets`.

  ### Upgrading to version 2.0.0

  The chart is no more compatible with Helm 2.

  Refer to the [Helm documentation](https://helm.sh/docs/topics/v2_v3_migration/) for more information.
components:
  - name: whoami
    deployment:
      type: deployment
      container:
        env: |
          - name: WHOAMI_PORT_NUMBER
            value: {{ .Values.containerPorts.http | quote }}
        livenessProbe:
          httpGet:
            path: /health
        readinessProbe:
          httpGet:
            path: /health
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 0
          runAsGroup: 0
        startupProbe:
          httpGet:
            path: /health
    image:
      registry: docker.io
      repository: traefik/whoami
      tag: v1.11.0
    ingress:
      paths:
        - /
    service:
      ports:
        - name: http
          number: 80
          numberForward: 8080
          description: HTTP
tests: |
  import requests


  def test_service_connection():
      url = "http://{{ include "whoami.fullname" . }}:{{ .Values.service.ports.http }}/"

      response = requests.get(url)

      assert response.status_code == 200
