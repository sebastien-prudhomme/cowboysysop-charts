
name: vertical-pod-autoscaler
productName: Vertical Pod Autoscaler
appVersion: 0.14.0
description: is a <<set of components that automatically adjust the amount of CPU and memory requested by pods running in the Kubernetes Cluster>>
home: https://github.com/kubernetes/autoscaler
icon: https://raw.githubusercontent.com/kubernetes/kubernetes/master/logo/logo.svg
license: 2020
source: https://github.com/kubernetes/autoscaler
version: 8.0.0
prerequisites: |
  - Kubernetes >= 1.22
  - Metrics Server >= 0.2 (you can use the [bitnami/metrics-server](https://artifacthub.io/packages/helm/bitnami/metrics-server) chart)
updates: |
  ### Upgrading to version 8.0.0

  Some parameters related to port management have been modified:

  - Parameter `updater.metrics.service.port` has been renamed `updater.metrics.service.ports.http-metrics`.
  - Parameter `updater.metrics.service.nodePort` has been renamed `updater.metrics.service.nodePorts.http-metrics`.

  ### Upgrading to version 7.0.0

  Some parameters related to image management have been modified:

  - Registry prefix in `image.repository` parameters is now configured in `image.registry`.
  - Parameter `imagePullSecrets` has been renamed `global.imagePullSecrets`.

  ### Upgrading to version 6.0.0

  The application version is no more compatible with Kubernetes 1.19, 1.20 and 1.21.

  ### Upgrading to version 5.0.0

  The application validates that all fields that specify CPU and memory have supported resolution:

  - CPU is a whole number of milli CPUs
  - Memory is a whole number of bytes

  ### Upgrading to version 4.0.0

  The application version is no more compatible with Kubernetes 1.16.

  Custom resource definitions are now created and upgraded with a pre-install/pre-upgrade job.

  ### Upgrading to version 3.0.0

  The chart is no more compatible with Helm 2.

  Refer to the [Helm documentation](https://helm.sh/docs/topics/v2_v3_migration/) for more information.

  ### Upgrading to version 2.0.0

  The port names have been changed to be compatible with Istio service mesh.
components:
  - name: admission-controller
    optional: true
    clusterrole: |
      # system:vpa-target-reader
      - apiGroups:
          - "*"
        resources:
          - "*/scale"
        verbs:
          - get
          - watch
      - apiGroups:
          - ""
        resources:
          - replicationcontrollers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - apps
        resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - list
          - watch
      # system:vpa-admission-controller
      - apiGroups:
          - ""
        resources:
          - pods
          - configmaps
          - nodes
          - limitranges
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - "admissionregistration.k8s.io"
        resources:
          - mutatingwebhookconfigurations
        verbs:
          - create
          - delete
          - get
          - list
      - apiGroups:
          - "poc.autoscaling.k8s.io"
        resources:
          - verticalpodautoscalers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - "autoscaling.k8s.io"
        resources:
          - verticalpodautoscalers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - "coordination.k8s.io"
        resources:
          - leases
        verbs:
          - create
          - update
          - get
          - list
          - watch
    deployment:
      type: deployment
      container:
        args: |
          - --client-ca-file=/tls-secret/ca.crt
          - --tls-cert-file=/tls-secret/tls.crt
          - --tls-private-key=/tls-secret/tls.key
        extraArgs: |
          # kube-api-burst: 10
          # kube-api-qps: 5
          v: 2
          # vpa-object-namespace: ""
          # webhook-timeout-seconds: 30
        extraArgsDoc: |
          ## @skip admissionController.extraArgs.v
        env: |
          - name: NAMESPACE
            value: {{ .Release.Namespace }}
        livenessProbe:
          httpGet:
            path: /health-check
        readinessProbe:
          httpGet:
            path: /health-check
        volumeMounts: |
          - name: tls-secret
            mountPath: /tls-secret
            readOnly: true
    image:
      registry: registry.k8s.io
      repository: autoscaling/vpa-admission-controller
      tag: 0.14.0
    metrics:
      ports:
        - name: http-metrics
          number: 8944
          description: HTTP
    service:
      nameOverride: vpa-webhook
      ports:
        - name: https
          number: 8000
          description: HTTPS
    serviceMonitor: true
    tls: true
  - name: recommender
    clusterrole: |
      # system:metrics-reader
      - apiGroups:
          - "metrics.k8s.io"
        resources:
          - pods
        verbs:
          - get
          - list
      # system:vpa-actor
      - apiGroups:
          - ""
        resources:
          - pods
          - nodes
          - limitranges
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - get
          - list
          - watch
          - create
      - apiGroups:
          - "poc.autoscaling.k8s.io"
        resources:
          - verticalpodautoscalers
        verbs:
          - get
          - list
          - watch
          - patch
      - apiGroups:
          - "autoscaling.k8s.io"
        resources:
          - verticalpodautoscalers
        verbs:
          - get
          - list
          - watch
          - patch
      # system:vpa-checkpoint-actor
      - apiGroups:
          - "poc.autoscaling.k8s.io"
        resources:
          - verticalpodautoscalercheckpoints
        verbs:
          - get
          - list
          - watch
          - create
          - patch
          - delete
      - apiGroups:
          - "autoscaling.k8s.io"
        resources:
          - verticalpodautoscalercheckpoints
        verbs:
          - get
          - list
          - watch
          - create
          - patch
          - delete
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
      # system:vpa-target-reader
      - apiGroups:
          - "*"
        resources:
          - "*/scale"
        verbs:
          - get
          - watch
      - apiGroups:
          - ""
        resources:
          - replicationcontrollers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - apps
        resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - list
          - watch
    deployment:
      type: deployment
      container:
        extraArgs: |
          # checkpoints-gc-interval: 10m0s
          # checkpoints-timeout: 1m0s
          # container-name-label: name
          # container-namespace-label: namespace
          # container-pod-name-label: pod_name
          # cpu-histogram-decay-half-life: 24h0m0s
          # cpu-integer-post-processor-enabled: false
          # history-length: 8d
          # history-resolution: 1h
          # kube-api-burst: 10
          # kube-api-qps: 5
          # memory-aggregation-interval: 24h0m0s
          # memory-aggregation-interval-count: 8
          # memory-histogram-decay-half-life: 24h0m0s
          # memory-saver: false
          # metric-for-pod-labels: up{job="kubernetes-pods"}
          # min-checkpoints: 10
          # oom-bump-up-ratio: 1.2
          # oom-min-bump-up-bytes: 104857600
          # pod-label-prefix: pod_label_
          # pod-name-label: kubernetes_pod_name
          # pod-namespace-label: kubernetes_namespace
          # pod-recommendation-min-cpu-millicores: 25
          # pod-recommendation-min-memory-mb: 250
          # prometheus-address: ""
          # prometheus-cadvisor-job-name: kubernetes-cadvisor
          # prometheus-query-timeout: 5m
          # recommendation-margin-fraction: 0.15
          # recommender-interval: 1m0s
          # recommender-name: default
          # storage: checkpoint
          # target-cpu-percentile: 0.9
          v: 2
          # vpa-object-namespace: ""
        extraArgsDoc: |
          ## @skip recommender.extraArgs.v
        livenessProbe:
          httpGet:
            path: /health-check
        readinessProbe:
          httpGet:
            path: /health-check
    image:
      registry: registry.k8s.io
      repository: autoscaling/vpa-recommender
      tag: 0.14.0
    metrics:
      ports:
        - name: http-metrics
          number: 8942
          description: HTTP
    serviceMonitor: true
  - name: updater
    optional: true
    clusterrole: |
      # system:vpa-actor
      - apiGroups:
          - ""
        resources:
          - pods
          - nodes
          - limitranges
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - get
          - list
          - watch
          - create
      - apiGroups:
          - "poc.autoscaling.k8s.io"
        resources:
          - verticalpodautoscalers
        verbs:
          - get
          - list
          - watch
          - patch
      - apiGroups:
          - "autoscaling.k8s.io"
        resources:
          - verticalpodautoscalers
        verbs:
          - get
          - list
          - watch
          - patch
      # system:vpa-target-reader
      - apiGroups:
          - "*"
        resources:
          - "*/scale"
        verbs:
          - get
          - watch
      - apiGroups:
          - ""
        resources:
          - replicationcontrollers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - apps
        resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - list
          - watch
      # system:evictioner
      - apiGroups:
          - "apps"
          - "extensions"
        resources:
          - replicasets
        verbs:
          - get
      - apiGroups:
          - ""
        resources:
          - pods/eviction
        verbs:
          - create
      # system:vpa-status-reader
      - apiGroups:
          - "coordination.k8s.io"
        resources:
          - leases
        verbs:
          - get
          - list
          - watch
    deployment:
      type: deployment
      container:
        extraArgs: |
          # evict-after-oom-threshold: 10m0s
          # eviction-rate-burst: 1
          # eviction-rate-limit: -1
          # eviction-tolerance: 0.5
          # in-recommendation-bounds-eviction-lifetime-threshold: 12h0m0s
          # kube-api-burst: 10
          # kube-api-qps: 5
          # min-replicas: 2
          # pod-update-threshold: 0.1
          # updater-interval: 1m0s
          # use-admission-controller-status: true
          v: 2
          # vpa-object-namespace: ""
        extraArgsDoc: |
          ## @skip updater.extraArgs.v
        env: |
          - name: NAMESPACE
            value: {{ .Release.Namespace }}
        livenessProbe:
          httpGet:
            path: /health-check
        readinessProbe:
          httpGet:
            path: /health-check
    image:
      registry: registry.k8s.io
      repository: autoscaling/vpa-updater
      tag: 0.14.0
    metrics:
      ports:
        - name: http-metrics
          number: 8943
          description: HTTP
    serviceMonitor: true
crds: true
tests: |
  import requests


  def test_admission_controller_service_connection():
      # url = "https://{{ include "vertical-pod-autoscaler.admissionController.fullname" . }}.{{ .Release.Namespace }}.svc:{{ .Values.admissionController.service.port }}/"
      url = "https://vpa-webhook.{{ .Release.Namespace }}.svc:443/"
      verify = "/admission-controller-tls-secret/ca.crt"

      response = requests.get(url, verify=verify)

      assert response.status_code == 200


  def test_admission_controller_metrics_service_connection():
      url = "http://{{ include "vertical-pod-autoscaler.admissionController.metrics.fullname" . }}:{{ .Values.admissionController.metrics.service.port }}/metrics"

      response = requests.get(url)

      assert response.status_code == 200


  def test_recommender_metrics_service_connection():
      url = "http://{{ include "vertical-pod-autoscaler.recommender.metrics.fullname" . }}:{{ .Values.recommender.metrics.service.port }}/metrics"

      response = requests.get(url)

      assert response.status_code == 200


  def test_updater_metrics_service_connection():
      url = "http://{{ include "vertical-pod-autoscaler.updater.metrics.fullname" . }}:{{ .Values.updater.metrics.service.port }}/metrics"

      response = requests.get(url)

      assert response.status_code == 200
