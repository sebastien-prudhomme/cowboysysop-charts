name: local-ai
components:
  - name: local-ai
    configmap: |
      preload-models.json: |
        {{- .Values.config.preloadModels | toPrettyJson | nindent 4 }}
    deployment:
      initContainer:
        command: |
          - /bin/bash
          - -ec
          - |
            mkdir -p /data/generated-audio
            mkdir -p /data/generated-images
            mkdir -p /data/models
        volumeMounts: |
          - name: data
            mountPath: /data
      container:
        env: |
          - name: ADDRESS
            value: ":{{ .Values.containerPorts.http }}"
          - name: AUDIO_PATH
            value: /data/generated-audio
          - name: IMAGE_PATH
            value: /data/generated-images
          - name: MODELS_PATH
            value: /data/models
          - name: GALLERIES
            value: {{ .Values.config.galleries | toJson | quote }}
          - name: PRELOAD_MODELS_CONFIG
            value: /config/preload-models.json
          - name: REBUILD
            value: "false"
        livenessProbe:
          httpGet:
            path: /healthz
        readinessProbe:
          httpGet:
            path: /readyz
        volumeMounts: |
          - name: config
            mountPath: /config/preload-models.json
            subPath: preload-models.json
          - name: data
            mountPath: /data
      volumes:
        config: true
        data: true
    ingress: true
    persistentvolumeclaim: true
    service:
      ports:
        - name: http
tests: |
  import requests


  def test_service_connection():
      url = "http://{{ include "local-ai.fullname" . }}:{{ .Values.service.ports.http }}/v1/models"

      response = requests.get(url)

      assert response.status_code == 200
