name: n8n
productName: N8n
appVersion: 1.0.3
description: is <<an extendable workflow automation tool>>
home: https://n8n.io/
icon: https://raw.githubusercontent.com/cowboysysop/charts/master/charts/n8n/icon.png
license: 2023
source: https://github.com/n8n-io/n8n
version: 1.0.0
components:
  - name: n8n
    deployment:
      type: deployment
      container:
        env: |
          - name: DB_TYPE
            value: postgresdb
          - name: DB_POSTGRESDB_HOST
            value: {{ include "n8n.postgresql.host" . | quote }}
          - name: DB_POSTGRESDB_PORT
            value: {{ include "n8n.postgresql.port" . | quote }}
          - name: DB_POSTGRESDB_USER
            value: {{ include "n8n.postgresql.username" . | quote }}
          - name: DB_POSTGRESDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "n8n.postgresql.secretName" . }}
                key: {{ include "n8n.postgresql.secretKeyNamePassword" . }}
          - name: DB_POSTGRESDB_DATABASE
            value: {{ include "n8n.postgresql.database" . | quote }}
            {{- if .Values.metrics.enabled }}
          - name: N8N_METRICS
            value: "true"
          # - name: N8N_METRICS_INCLUDE_WORKFLOW_ID_LABEL
          #   value: "true"
          # - name: N8N_METRICS_INCLUDE_NODE_TYPE_LABEL
          #   value: "true"
          # - name: N8N_METRICS_INCLUDE_CREDENTIAL_TYPE_LABEL
          #   value: "true"
          # - name: N8N_METRICS_INCLUDE_API_ENDPOINTS
          #   value: "true"
          # - name: N8N_METRICS_INCLUDE_API_PATH_LABEL
          #   value: "true"
          # - name: N8N_METRICS_INCLUDE_API_METHOD_LABEL
          #   value: "true"
          # - name: N8N_METRICS_INCLUDE_API_STATUS_CODE_LABEL
          #   value: "true"
          {{- end }}
          - name: N8N_PORT
            value: {{ .Values.containerPorts.http | quote }}
        livenessProbe:
          initialDelaySeconds: 180
          httpGet:
            path: /healthz
        readinessProbe:
          httpGet:
            path: /healthz
        startupProbe:
          httpGet:
            path: /healthz
    image:
      registry: docker.io
      repository: n8nio/n8n
      tag: 1.0.3
    ingress: true
    metrics:
      optional: true
    service:
      ports:
        - name: http
          number: 5678
          description: HTTP
    serviceMonitor: true
  - name: worker
    description: Worker
    deployment:
      type: deployment
      container:
        args: |
          - worker
        env: |
          - name: DB_TYPE
            value: postgresdb
          - name: DB_POSTGRESDB_HOST
            value: {{ include "n8n.postgresql.host" . | quote }}
          - name: DB_POSTGRESDB_PORT
            value: {{ include "n8n.postgresql.port" . | quote }}
          - name: DB_POSTGRESDB_USER
            value: {{ include "n8n.postgresql.username" . | quote }}
          - name: DB_POSTGRESDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "n8n.postgresql.secretName" . }}
                key: {{ include "n8n.postgresql.secretKeyNamePassword" . }}
          - name: DB_POSTGRESDB_DATABASE
            value: {{ include "n8n.postgresql.database" . | quote }}
          - name: QUEUE_BULL_REDIS_HOST
            value: {{ include "n8n.redis.host" . | quote }}
          - name: QUEUE_BULL_REDIS_PORT
            value: {{ include "n8n.redis.port" . | quote }}
          - name: QUEUE_BULL_REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "n8n.redis.secretName" . }}
                key: {{ include "n8n.redis.secretKeyNamePassword" . }}
          - name: QUEUE_HEALTH_CHECK_ACTIVE
            value: "true"
          - name: QUEUE_HEALTH_CHECK_PORT
            value: {{ .Values.worker.containerPorts.probes | quote }}
        ports:
          - name: probes
            nameContainer: http-probes
            number: 5678
            description: Probes
        livenessProbe:
          httpGet:
            path: /healthz
            port: http-probes
        readinessProbe:
          httpGet:
            path: /healthz
            port: http-probes
        startupProbe:
          httpGet:
            path: /healthz
            port: http-probes
    image:
      registry: docker.io
      repository: n8nio/n8n
      tag: 1.0.3
postgresql: true
redis: true
tests: |
  import requests


  def test_service_connection():
      url = "http://{{ include "n8n.fullname" . }}:{{ .Values.service.ports.http }}/"

      response = requests.get(url)

      assert response.status_code == 200
