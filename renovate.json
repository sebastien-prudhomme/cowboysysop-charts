{
  "bumpVersion": "patch",
  "dependencyDashboard": true,
  "ignorePaths": [
    "archives/**"
  ],
  "semanticCommits": "enabled",
  "semanticCommitScope": null,
  "semanticCommitType": "fix",
  "packageRules": [
    {
      "matchPackagePrefixes": [
        "docker.io/yuzutech/kroki"
      ],
      "groupName": "docker.io/yuzutech/kroki"
    },
    {
      "matchPackagePrefixes": [
        "registry.k8s.io/autoscaling/vpa"
      ],
      "groupName": "registry.k8s.io/autoscaling/vpa"
    },
    {
      "matchPaths": [
        ".github/workflows/**"
      ],
      "semanticCommitType": "ci"
    },
    {
      "matchPackageNames": [
        "helm",
        "kindest/node"
      ],
      "separateMinorPatch": true
    },
    {
      "matchPackageNames": [
        "helm",
        "kindest/node"
      ],
      "matchUpdateTypes": [
        "major",
        "minor"
      ],
      "enabled": false
    },
    {
      "matchPaths": [
        "charts/*/Chart.yaml",
        "charts/*/values.yaml"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "bumpVersion": "major",
      "semanticCommitType": "feat!"
    },
    {
      "matchPaths": [
        "charts/*/Chart.yaml",
        "charts/*/values.yaml"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "bumpVersion": "minor",
      "semanticCommitType": "feat"
    },
    {
      "matchUpdateTypes": [
        "patch"
      ],
      "automerge": true
    }
  ],
  "regexManagers": [
    {
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "(?<currentValue>v\\d+\\.\\d+\\.\\d+).* # renovate: cert-manager\\n"
      ],
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "cert-manager",
      "packageNameTemplate": "jetstack/cert-manager"
    },
    {
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "(:|-) (?<currentValue>.+?) # renovate: helm\\n"
      ],
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "helm",
      "packageNameTemplate": "helm/helm"
    },
    {
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "v(?<currentValue>\\d+\\.\\d+\\.\\d+).* # renovate: istio\\n"
      ],
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "istio",
      "packageNameTemplate": "istio/istio"
    },
    {
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "(:|-) (?<currentValue>.+?) # renovate: kindest\\/node\\n"
      ],
      "datasourceTemplate": "docker",
      "depNameTemplate": "kindest/node"
    },
    {
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "(?<currentValue>v\\d+\\.\\d+\\.\\d+).* # renovate: knative-serving\\n"
      ],
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "knative-serving",
      "extractVersionTemplate": "^knative-(?<version>.+)$",
      "packageNameTemplate": "knative/serving"
    },
    {
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "(:|-) (?<currentValue>.+?) # renovate: python\\n"
      ],
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "python",
      "extractVersionTemplate": "^(?<version>.+)-\\d+$",
      "packageNameTemplate": "actions/python-versions"
    },
    {
      "fileMatch": [
        "^\\.github\\/workflows\\/.*$"
      ],
      "matchStrings": [
        "(:|-) (?<currentValue>.+?) # renovate: ghcr.io\\/renovatebot\\/renovate\\n"
      ],
      "datasourceTemplate": "docker",
      "depNameTemplate": "ghcr.io/renovatebot/renovate"
    }
  ]
}
