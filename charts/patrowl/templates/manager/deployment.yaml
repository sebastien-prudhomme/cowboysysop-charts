apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "patrowl.manager.fullname" . }}
  labels:
    {{- include "patrowl.manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.manager.replicaCount }}
  selector:
    matchLabels:
      {{- include "patrowl.manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "patrowl.manager.selectorLabels" . | nindent 8 }}
        {{- with .Values.manager.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/manager/configmap.yaml") . | sha256sum }}
        {{- with .Values.manager.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.manager.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "patrowl.manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.manager.podSecurityContext | nindent 8 }}
      containers:
        - name: manager
          securityContext:
            {{- toYaml .Values.manager.securityContext | nindent 12 }}
          image: "{{ .Values.manager.image.repository }}:{{ .Values.manager.image.tag }}"
          imagePullPolicy: {{ .Values.manager.image.pullPolicy }}
          env:
            - name: DB_HOST
              value: patrowl-postgresql # A corriger
            - name: DB_PORT
              value: "5432" # A corriger
            - name: DB_PORT_5432_TCP_HOST
              value: patrowl-postgresql # A corriger
            - name: DB_PORT_5432_TCP_PORT
              value: "5432" # A corriger
            - name: DB_ENV_POSTGRES_USER
              value: {{ .Values.postgresql.postgresqlUsername | quote }}
            - name: DB_ENV_POSTGRES_PASSWORD
              value: {{ .Values.postgresql.postgresqlPassword | quote }}
            - name: DB_ENV_DB
              value: {{ .Values.postgresql.postgresqlDatabase | quote }}
            - name: RABBITMQ_HOST
              value: patrowl-rabbitmq # A corriger
            - name: RABBITMQ_PORT
              value: "5672" # A corriger
            - name: RABBIT_PORT_5672_TCP
              value: patrowl-rabbitmq:5672 # A corriger
            - name: RABBIT_ENV_USER
              value:  {{ .Values.rabbitmq.rabbitmq.username | quote }}
            - name: RABBIT_ENV_PASS
              value:  {{ .Values.rabbitmq.rabbitmq.password | quote }}
          ports:
            - name: http-manager
              containerPort: 8003
              protocol: TCP
          {{- if .Values.manager.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http-manager
            initialDelaySeconds: {{ .Values.manager.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.manager.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.manager.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.manager.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.manager.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.manager.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http-manager
            initialDelaySeconds: {{ .Values.manager.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.manager.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.manager.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.manager.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.manager.readinessProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.manager.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /opt/patrowl-manager/media
            - name: staticfiles
              mountPath: /opt/patrowl-manager/staticfiles
        - name: nginx
          securityContext:
            {{- toYaml .Values.manager.nginx.securityContext | nindent 12 }}
          image: "{{ .Values.manager.nginx.image.repository }}:{{ .Values.manager.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.manager.nginx.image.pullPolicy }}
          ports:
            - name: http-nginx
              containerPort: 8083
              protocol: TCP
          {{- if .Values.manager.nginx.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http-nginx
            initialDelaySeconds: {{ .Values.manager.nginx.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.manager.nginx.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.manager.nginx.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.manager.nginx.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.manager.nginx.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.manager.nginx.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http-nginx
            initialDelaySeconds: {{ .Values.manager.nginx.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.manager.nginx.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.manager.nginx.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.manager.nginx.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.manager.nginx.readinessProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.manager.nginx.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /opt/bitnami/nginx/conf/server_blocks/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: media
              mountPath: /opt/patrowl-manager/media
              readOnly: true
            - name: staticfiles
              mountPath: /opt/patrowl-manager/staticfiles
              readOnly: true
      {{- with .Values.manager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.manager.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.manager.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "patrowl.manager.fullname" . }}
        - name: media
          emptyDir: {}
        - name: staticfiles
          emptyDir: {}
