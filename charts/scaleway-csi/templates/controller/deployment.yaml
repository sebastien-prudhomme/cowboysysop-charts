apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scaleway-csi.controller.fullname" . }}
  labels:
    {{- include "scaleway-csi.controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      {{- include "scaleway-csi.controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "scaleway-csi.controller.selectorLabels" . | nindent 8 }}
        {{- with .Values.controller.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.controller.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "scaleway-csi.controller.serviceAccountName" . }}
      {{- if .Values.controller.priorityClassName }}
      priorityClassName: {{ .Values.controller.priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      containers:
        - name: controller
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          args:
            - --endpoint=unix:///socket/csi.sock
            - --mode=controller
            # -prefix string
            #     Prefix to add in block volume name
            # -v value
            #     number for the log level verbosity
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          readinessProbe:
            httpGet:
              path: /healthz
              port: healthz
          resources:
           {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
            - name: socket
              mountPath: /socket
        - name: csi-provisioner
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.csiProvisionerImage.repository }}:{{ .Values.controller.csiProvisionerImage.tag }}"
          imagePullPolicy: {{ .Values.controller.csiProvisionerImage.pullPolicy }}
          args:
            - --csi-address=/socket/csi.sock
            - --enable-leader-election=true
            - --feature-gates=Topology=true
            - --leader-election-type=leases
            - --metrics-address=:8080
            # --retry-interval-max duration        Maximum retry interval of failed provisioning or deletion. (default 5m0s)
            # --retry-interval-start duration      Initial retry interval of failed provisioning or deletion. It doubles with each failure, up to retry-interval-max. (default 1s)
            # --strict-topology                    Passes only selected node topology to CreateVolume Request, unlike default behavior of passing aggregated cluster topologies that match with topology keys of the selected node.
            # --timeout duration                   Timeout for waiting for creation or deletion of a volume (default 10s)
            # -v, --v Level                            number for the log level verbosity
            # --volume-name-prefix string          Prefix to apply to the name of a created volume. (default "pvc")
            # --volume-name-uuid-length int        Truncates generated UUID of a created volume to this length. Defaults behavior is to NOT truncate. (default -1)
            # --worker-threads uint                Number of provisioner worker threads, in other words nr. of simultaneous CSI calls. (default 100)
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          resources:
           {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
            - name: socket
              mountPath: /socket
        - name: csi-attacher
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.csiAttacherImage.repository }}:{{ .Values.controller.csiAttacherImage.tag }}"
          imagePullPolicy: {{ .Values.controller.csiAttacherImage.pullPolicy }}
          args:
            - --csi-address=/socket/csi.sock
            - --leader-election=true
            # -metrics-address :8080
            #     The TCP network address where the prometheus metrics endpoint will listen (example: :8080). The default is empty string, which means metrics endpoint is disabled.
            # -metrics-path /metrics
            #     The HTTP path where prometheus metrics will be exposed. Default is /metrics. (default "/metrics")
            # -reconcile-sync duration
            #     Resync interval of the VolumeAttachment reconciler. (default 1m0s)
            # -resync duration
            #     Resync interval of the controller. (default 10m0s)
            # -retry-interval-max duration
            #     Maximum retry interval of failed create volume or deletion. (default 5m0s)
            # -retry-interval-start duration
            #     Initial retry interval of failed create volume or deletion. It doubles with each failure, up to retry-interval-max. (default 1s)
            # -timeout duration
            #     Timeout for waiting for attaching or detaching the volume. (default 15s)
            # -v value
            #     number for the log level verbosity
            # -worker-threads uint
            #     Number of attacher worker threads (default 10)
          resources:
           {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
            - name: socket
              mountPath: /socket
        - name: csi-snapshotter
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.csiSnapshotterImage.repository }}:{{ .Values.controller.csiSnapshotterImage.tag }}"
          imagePullPolicy: {{ .Values.controller.csiSnapshotterImage.pullPolicy }}
          args:
            - --csi-address=/socket/csi.sock
            - --leader-election=true
            # -metrics-address :8080
            #     The TCP network address where the prometheus metrics endpoint will listen (example: :8080). The default is empty string, which means metrics endpoint is disabled.
            # -metrics-path /metrics
            #     The HTTP path where prometheus metrics will be exposed. Default is /metrics. (default "/metrics")
            # -resync-period duration
            #     Resync interval of the controller. (default 1m0s)
            # -snapshot-name-prefix string
            #     Prefix to apply to the name of a created snapshot (default "snapshot")
            # -snapshot-name-uuid-length int
            #     Length in characters for the generated uuid of a created snapshot. Defaults behavior is to NOT truncate. (default -1)
            # -timeout duration
            #     The timeout for any RPCs to the CSI driver. Default is 1 minute. (default 1m0s)
            # -v value
            #     number for the log level verbosity
          resources:
           {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
            - name: socket
              mountPath: /socket
        - name: snapshot-controller
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.snapshotControllerImage.repository }}:{{ .Values.controller.snapshotControllerImage.tag }}"
          imagePullPolicy: {{ .Values.controller.snapshotControllerImage.pullPolicy }}
          args:
            - --leader-election=true
            # -resync-period duration
            #     Resync interval of the controller. (default 1m0s)
            # -v value
            #     number for the log level verbosity
          resources:
           {{- toYaml .Values.controller.resources | nindent 12 }}
        - name: liveness-probe
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.livenessProbeImage.repository }}:{{ .Values.controller.livenessProbeImage.tag }}"
          imagePullPolicy: {{ .Values.controller.livenessProbeImage.pullPolicy }}
          args:
            - --csi-address=/socket/csi.sock
            # -health-port string
            #     TCP ports for listening healthz requests (default "9808")
            # -probe-timeout duration
            #     Probe timeout in seconds (default 1s)
            # -v value
            #     number for the log level verbosity
          resources:
           {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
            - name: socket
              mountPath: /socket
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: socket
          emptyDir: {}
